[package]
name = "vellogd"
version.workspace = true
edition.workspace = true

[lib]
crate-type = ["staticlib", "lib"]

[features]
default = ["winit", "tracing"]         # TODO: remove tracing
tracing = ["fastrace"]
no_winit = ["vellogd-shared/no_winit"]

[dependencies]
libc = "0.2.155"
savvy = "*"
vellogd-shared.workspace = true
vello.workspace = true
peniko.workspace = true
kurbo.workspace = true
parley.workspace = true
ipc-channel.workspace = true

winit = { workspace = true, optional = true }

fastrace = { workspace = true, optional = true }

[workspace]
members = ["vellogd-server", "vellogd-shared"]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"

[workspace.dependencies]
vellogd-shared = { path = "./vellogd-shared" }

ipc-channel = "0.18.3"
winit = "0.30"
pollster = "0.3"

vello = "0.3"
parley = "0.2"
fastrace = { version = "0.7", features = ["enable"] }

# While vello exposes peniko and kurbo, it doesn't provide the serde feature
# flag. It seems the recommended way is to use peniko and kurbo directly.
peniko = { version = "*", default-features = false, features = ["serde"] }
kurbo = { version = "*", default-features = false, features = ["serde"] }

anyhow = "1.0"

[profile.release]
# By default, on release build, savvy terminates the R session when a panic
# occurs. This is the right behavior in that a panic means such a fatal event
# where we can have no hope of recovery. 
# 
# cf. https://doc.rust-lang.org/book/ch09-03-to-panic-or-not-to-panic.html
# 
# However, it's possible that the panic is thrown by some of the dependency
# crate and there's little you can do. In such cases, you can change the
# following line to `panic = "unwind"` to always catch a panic.
panic = "abort"
